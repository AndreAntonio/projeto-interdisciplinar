--Criação de Tabelas--

create table contrato(
    id_contrato bigint not null primary key 
               generated always as identity
               (start with 1, increment by 1),
    termoDoContrato varchar(1000)
);

create table termo_de_aceite(
id_termo bigint not null primary key 
               generated always as identity
               (start with 1, increment by 1),
termo varchar(500)
);

create table pagamento(
id_pagamento bigint not null primary key 
               generated always as identity
               (start with 1, increment by 1),
fk_contrato bigint,
fk_cliente bigint,
tipo int,
preco double
);

create table boleto(
id_boleto bigint not null primary key 
               generated always as identity
               (start with 1, increment by 1),
tipo int
);

create table credito(
id_credito bigint not null primary key 
               generated always as identity
               (start with 1, increment by 1),
tipo int
);
create table debito(
id_debito bigint not null primary key 
               generated always as identity
               (start with 1, increment by 1),
tipo int
);


create table usuario(
id_usuario bigint not null primary key 
               generated always as identity
               (start with 1, increment by 1),
nome varchar(40),
email varchar(60),
senha varchar(32),
telefone varchar (13),
tipo varchar(20)
);

create table fornecedor(
id_fornecedor bigint not null primary key 
               generated always as identity
               (start with 1, increment by 1)
);

create table cliente(
id_cliente bigint not null primary key 
               generated always as identity
               (start with 1, increment by 1)

);

create table pessoa_fisica(
id_pf bigint not null primary key 
               generated always as identity
               (start with 1, increment by 1),
cpf varchar(15) not null
);

create table pessoa_juridica(
id_pj bigint not null primary key 
               generated always as identity
               (start with 1, increment by 1),
cnpj varchar(20) not null
);

create table servico(
id_servico bigint not null primary key 
               generated always as identity
               (start with 1, increment by 1),
fk_usuario bigint,
valor double,
descricao varchar(120),
status boolean,
dataInicial date,
dataFinal date
);

create table avaliacao(
id_avaliacao bigint not null primary key 
               generated always as identity
               (start with 1, increment by 1),
nota double,
comentario varchar(144)
);

create table orcamento(
id_orcamento bigint not null primary key 
               generated always as identity
               (start with 1, increment by 1),
valorTot double,
status varchar(30),
tempoTot varchar(50),
validade date
);

create table negociacao(
id_negociacao bigint not null primary key 
               generated always as identity
               (start with 1, increment by 1),
fk_orcamento bigint,
status varchar(30),
pedido varchar(144)
);

create table item(
id_item bigint not null primary key 
               generated always as identity
               (start with 1, increment by 1),
fk_orcamento bigint,
valor double
);

create table mao_de_obra(
id_mao_de_obra bigint not null primary key 
               generated always as identity
               (start with 1, increment by 1),
descricao varchar(144),
tempoExecucao varchar(100)
);

create table material(
id_material bigint not null primary key 
               generated always as identity
               (start with 1, increment by 1),
tipo varchar(100),
quantidade int not null
);


-- Fim da Criação -- 

-- Alter Tables -- 

-- Relacionamentos 1 para 1 --
alter table contrato
add foreign key(id_contrato)
references termo_de_aceite(id_termo)
on delete cascade;

alter table contrato
add foreign key(id_contrato)
references orcamento(id_orcamento)
on delete cascade;

alter table contrato
add foreign key(id_contrato)
references usuario(id_usuario)
on delete cascade;

alter table pagamento
add foreign key(id_pagamento)
references boleto(id_boleto)
on delete cascade;

alter table pagamento
add foreign key(id_pagamento)
references credito(id_credito)
on delete cascade;

alter table pagamento
add foreign key(id_pagamento)
references debito(id_debito)
on delete cascade;

alter table usuario
add foreign key(id_usuario)
references cliente(id_cliente)
on delete cascade;

alter table usuario
add foreign key(id_usuario)
references fornecedor(id_fornecedor)
on delete cascade;

alter table cliente
add foreign key(id_cliente)
references pessoa_fisica(id_pf)
on delete cascade;

alter table cliente
add foreign key(id_cliente)
references pessoa_juridica(id_pj)
on delete cascade;

alter table servico
add foreign key(id_servico)
references avaliacao(id_avaliacao)
on delete cascade;

alter table servico
add foreign key(id_servico)
references orcamento(id_orcamento)
on delete cascade;

alter table item
add foreign key(id_item)
references material(id_material)
on delete cascade;

alter table item
add foreign key(id_item)
references mao_de_obra(id_mao_de_obra)
on delete cascade;


-- Relacionamentos 1 para muitos --

alter table pagamento
add foreign key(fk_contrato)
references contrato(id_contrato)
on delete cascade;

alter table pagamento
add foreign key(fk_cliente)
references usuario(id_usuario)
on delete cascade;

alter table servico
add foreign key(fk_usuario)
references usuario(id_usuario)
on delete cascade;

alter table negociacao
add foreign key(fk_orcamento)
references orcamento(id_orcamento)
on delete cascade;


alter table item
add foreign key(fk_orcamento)
references orcamento(id_orcamento)
on delete cascade;

-- Fim dos Relacionamentos -- 